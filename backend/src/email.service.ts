import { Injectable } from '@nestjs/common';
import * as SibApiV3Sdk from '@getbrevo/brevo';

@Injectable()
export class EmailService {
  private apiInstance: SibApiV3Sdk.TransactionalEmailsApi;

  constructor() {
    this.apiInstance = new SibApiV3Sdk.TransactionalEmailsApi();
    const apiKey = process.env.BREVO_API_KEY;
    if (!apiKey) {
      throw new Error('BREVO_API_KEY environment variable is required');
    }
    this.apiInstance.setApiKey(SibApiV3Sdk.TransactionalEmailsApiApiKeys.apiKey, apiKey);
  }

  async sendSuggestionsEmail(
    toEmail: string,
    fromEmail: string,
    suggestions: any[],
    activity: string,
    locationTime: string,
    price: string
  ): Promise<boolean> {
    const htmlContent = this.generateEmailHTML(suggestions, activity, locationTime, price);
    
    try {
      const sendSmtpEmail = new SibApiV3Sdk.SendSmtpEmail();
      sendSmtpEmail.to = [{ email: toEmail }];
      sendSmtpEmail.sender = { email: fromEmail, name: 'Personal Concierge' };
      sendSmtpEmail.subject = `Your Personalized Activity Suggestions for ${locationTime}`;
      sendSmtpEmail.htmlContent = htmlContent;

      await this.apiInstance.sendTransacEmail(sendSmtpEmail);
      return true;
    } catch (error) {
      console.error('Email sending error:', error);
      return false;
    }
  }

  private generateEmailHTML(suggestions: any[], activity: string, locationTime: string, price: string): string {
    const suggestionsHTML = suggestions.map(suggestion => `
      <div style="margin-bottom: 20px; padding: 15px; border: 1px solid #e0e0e0; border-radius: 8px; background-color: #f9f9f9;">
        <h3 style="margin: 0 0 10px 0; color: #333;">${suggestion.title}</h3>
        <p style="margin: 0 0 8px 0; color: #666;">${suggestion.description}</p>
        <div style="font-size: 14px; color: #888;">
          <strong>Cost:</strong> ${suggestion.cost} | 
          <strong>Location:</strong> ${suggestion.address}
          ${suggestion.website ? `| <a href="${suggestion.website}" style="color: #007bff;">Visit Website</a>` : ''}
        </div>
      </div>
    `).join('');

    return `
      <!DOCTYPE html>
      <html>
      <head>
        <meta charset="utf-8">
        <title>Your Activity Suggestions</title>
      </head>
      <body style="font-family: Arial, sans-serif; line-height: 1.6; color: #333; max-width: 600px; margin: 0 auto; padding: 20px;">
        <div style="background-color: #f8f9fa; padding: 20px; border-radius: 8px; margin-bottom: 20px;">
          <h1 style="margin: 0 0 10px 0; color: #007bff;">Your Personalized Activity Suggestions</h1>
          <p style="margin: 0; color: #666;">
            <strong>Activity:</strong> ${activity}<br>
            <strong>Location & Time:</strong> ${locationTime}<br>
            <strong>Price Preference:</strong> ${price}
          </p>
        </div>
        
        <div style="margin-bottom: 20px;">
          ${suggestionsHTML}
        </div>
        
        <div style="text-align: center; padding: 20px; background-color: #f8f9fa; border-radius: 8px;">
          <p style="margin: 0; color: #666;">
            Generated by your Personal Concierge Assistant
          </p>
        </div>
      </body>
      </html>
    `;
  }

  generateEmailPreview(suggestions: any[], activity: string, locationTime: string, price: string): string {
    const suggestionsText = suggestions.map(suggestion => 
      `â€¢ ${suggestion.title}\n  ${suggestion.description}\n  Cost: ${suggestion.cost} | Location: ${suggestion.address}`
    ).join('\n\n');

    return `Your Personalized Activity Suggestions

Activity: ${activity}
Location & Time: ${locationTime}
Price Preference: ${price}

SUGGESTIONS:
${suggestionsText}

---
Generated by your Personal Concierge Assistant`;
  }
} 